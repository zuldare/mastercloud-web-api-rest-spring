{
  "openapi": "3.0.1",
  "info": {
    "title": "Books API",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "API of books"
    }
  ],
  "paths": {
    "/api/users": {
      "get": {
        "tags": [
          "api-rest-controller"
        ],
        "summary": "Get information of all users",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "Users founds",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api-rest-controller"
        ],
        "summary": "Creates a new user with all the needed data ",
        "operationId": "createUser",
        "requestBody": {
          "description": "User to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreationModificationDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "User nick already exists"
          },
          "201": {
            "description": "User created ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/comments": {
      "post": {
        "tags": [
          "api-rest-controller"
        ],
        "summary": "Creates a new comment with all the needed data ",
        "operationId": "createComment",
        "requestBody": {
          "description": "Comment to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentCreationDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Comment created ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/books": {
      "get": {
        "tags": [
          "api-rest-controller"
        ],
        "summary": "Get a reduced information (id, title) of all books",
        "operationId": "getBooks",
        "responses": {
          "200": {
            "description": "Books founds",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookReducedDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api-rest-controller"
        ],
        "summary": "Creates a new book with all the needed ",
        "operationId": "createBook",
        "requestBody": {
          "description": "Book to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookCreationDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Book created ok"
          }
        }
      }
    },
    "/api/users/{userId}": {
      "get": {
        "tags": [
          "api-rest-controller"
        ],
        "summary": "Get a particular user according to an id",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "id of the user to be searched",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "api-rest-controller"
        ],
        "summary": "Deletes a user according to an id, this user can not be deleted if has comments",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Identification of the comment to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "500": {
            "description": "User could not be deleted"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "patch": {
        "tags": [
          "api-rest-controller"
        ],
        "summary": "Updates the data of a user",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "id of the user to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreationModificationDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "User nick already exists"
          },
          "200": {
            "description": "User updated ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/books/{bookId}": {
      "get": {
        "tags": [
          "api-rest-controller"
        ],
        "summary": "Get a particular book with the full information of it",
        "operationId": "getBook",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "id of the book to be searched",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Book not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BookWithCommentsDto"
                }
              }
            }
          },
          "200": {
            "description": "Book found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookWithCommentsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/books/{bookId}/comments": {
      "get": {
        "tags": [
          "api-rest-controller"
        ],
        "summary": "Get a all the comments of a book",
        "operationId": "getBooksComment",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "id of the book to be searched",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Book not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommentDto"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Comments found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/comments/{commentId}": {
      "delete": {
        "tags": [
          "api-rest-controller"
        ],
        "summary": "Deletes a comment according to an id",
        "operationId": "deleteComment",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "Identification of the comment to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book deleted ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentDto"
                }
              }
            }
          },
          "404": {
            "description": "Book not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserCreationModificationDto": {
        "required": [
          "email",
          "nick"
        ],
        "type": "object",
        "properties": {
          "nick": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "nick": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "CommentCreationDto": {
        "required": [
          "bookId",
          "commentary",
          "nick",
          "score"
        ],
        "type": "object",
        "properties": {
          "score": {
            "maximum": 5,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "commentary": {
            "type": "string"
          },
          "bookId": {
            "type": "integer",
            "format": "int64"
          },
          "nick": {
            "type": "string"
          }
        }
      },
      "CommentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "commentary": {
            "type": "string"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "bookId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "BookCreationDto": {
        "required": [
          "author",
          "publishYear",
          "publishingHouse",
          "summary",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "publishingHouse": {
            "type": "string"
          },
          "publishYear": {
            "maximum": 2099,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BookReducedDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "BookWithCommentsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "publishingHouse": {
            "type": "string"
          },
          "publishYear": {
            "type": "integer",
            "format": "int32"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommentReducedDto"
            }
          }
        }
      },
      "CommentReducedDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "commentary": {
            "type": "string"
          },
          "userNick": {
            "type": "string"
          },
          "userEmail": {
            "type": "string"
          }
        }
      }
    }
  }
}