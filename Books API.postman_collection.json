{
	"info": {
		"_postman_id": "d09ef602-7734-4c51-aa83-117f7c701ce4",
		"name": "Books API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "users",
					"item": [
						{
							"name": "{user Id}",
							"item": [
								{
									"name": "Get a particular user according to an id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												":userId"
											],
											"variable": [
												{
													"id": "bd34dd08-d795-4cbd-9577-4b65b6353ae8",
													"key": "userId",
													"value": "<long>",
													"type": "string",
													"description": "(Required) id of the user to be searched"
												}
											]
										}
									},
									"response": [
										{
											"name": "User not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": -71070796,\n \"nick\": \"voluptate\",\n \"email\": \"cupidatat\"\n}"
										}
									]
								},
								{
									"name": "Deletes a user according to an id, this user can not be deleted if has comments",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												":userId"
											],
											"variable": [
												{
													"id": "ad82880b-32a5-4b54-bfc9-0b2d7cba10a6",
													"key": "userId",
													"value": "<long>",
													"type": "string",
													"description": "(Required) Identification of the comment to be deleted"
												}
											]
										}
									},
									"response": [
										{
											"name": "User deleted ok",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": -71070796,\n \"nick\": \"voluptate\",\n \"email\": \"cupidatat\"\n}"
										},
										{
											"name": "User could not be deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Updates the data of a user",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"nick\": \"<string>\"\n}",
											"options": {
												"raw": {}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												":userId"
											],
											"variable": [
												{
													"id": "dbdb1ad4-65bb-4fb7-89d0-4a1f1b75f8e1",
													"key": "userId",
													"value": "<long>",
													"type": "string",
													"description": "(Required) id of the user to be updated"
												}
											]
										}
									},
									"response": [
										{
											"name": "User nick already exists",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"nick\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"nick\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User updated ok",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"<string>\",\n    \"nick\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": -71070796,\n \"nick\": \"voluptate\",\n \"email\": \"cupidatat\"\n}"
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get information of all users",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": [
								{
									"name": "Users founds",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": -71070796,\n \"nick\": \"voluptate\",\n \"email\": \"cupidatat\"\n}"
								}
							]
						},
						{
							"name": "Creates a new user with all the needed data ",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<string>\",\n    \"nick\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": [
								{
									"name": "User created ok",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"nick\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": -71070796,\n \"nick\": \"voluptate\",\n \"email\": \"cupidatat\"\n}"
								},
								{
									"name": "User nick already exists",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"<string>\",\n    \"nick\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "comments",
					"item": [
						{
							"name": "Creates a new comment with all the needed data ",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bookId\": \"<long>\",\n    \"commentary\": \"<string>\",\n    \"nick\": \"<string>\",\n    \"score\": \"<integer>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"comments"
									]
								}
							},
							"response": [
								{
									"name": "Comment created ok",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"bookId\": \"<long>\",\n    \"commentary\": \"<string>\",\n    \"nick\": \"<string>\",\n    \"score\": \"<integer>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/comments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"comments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": -46035997,\n \"score\": 3999227,\n \"commentary\": \"cillum\",\n \"userId\": -97780598,\n \"bookId\": -25499623\n}"
								}
							]
						},
						{
							"name": "Deletes a comment according to an id",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/comments/:commentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"comments",
										":commentId"
									],
									"variable": [
										{
											"id": "df4850d5-3a54-4416-a144-a9ae49d976f8",
											"key": "commentId",
											"value": "<long>",
											"type": "string",
											"description": "(Required) Identification of the comment to be deleted"
										}
									]
								}
							},
							"response": [
								{
									"name": "Book deleted ok",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/comments/:commentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"comments",
												":commentId"
											],
											"variable": [
												{
													"key": "commentId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": -46035997,\n \"score\": 3999227,\n \"commentary\": \"cillum\",\n \"userId\": -97780598,\n \"bookId\": -25499623\n}"
								},
								{
									"name": "Book not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/comments/:commentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"comments",
												":commentId"
											],
											"variable": [
												{
													"key": "commentId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "books",
					"item": [
						{
							"name": "{book Id}",
							"item": [
								{
									"name": "Get a particular book with the full information of it",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/books/:bookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"books",
												":bookId"
											],
											"variable": [
												{
													"id": "1af38a0a-f929-4c07-9eb1-7df38b6c33c2",
													"key": "bookId",
													"value": "<long>",
													"type": "string",
													"description": "(Required) id of the book to be searched"
												}
											]
										}
									},
									"response": [
										{
											"name": "Book found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/books/:bookId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"books",
														":bookId"
													],
													"variable": [
														{
															"key": "bookId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": 71135654,\n \"title\": \"voluptate dolor nostrud\",\n \"author\": \"anim ex\",\n \"summary\": \"qui\",\n \"publishingHouse\": \"commodo quis deserunt\",\n \"publishYear\": -79393447,\n \"comments\": [\n  {\n   \"id\": 99573562,\n   \"score\": -14920236,\n   \"commentary\": \"incididunt\",\n   \"userNick\": \"velit aute veniam culpa aliquip\",\n   \"userEmail\": \"ut deserunt eiusmod dolor\"\n  },\n  {\n   \"id\": 99843728,\n   \"score\": -30737185,\n   \"commentary\": \"dolor\",\n   \"userNick\": \"nostrud sint commodo\",\n   \"userEmail\": \"tempor veniam dolor\"\n  }\n ]\n}"
										},
										{
											"name": "Book not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/books/:bookId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"books",
														":bookId"
													],
													"variable": [
														{
															"key": "bookId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get a all the comments of a book",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/books/:bookId/comments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"books",
												":bookId",
												"comments"
											],
											"variable": [
												{
													"id": "62c10905-4ce8-4707-8b73-33e179b438dc",
													"key": "bookId",
													"value": "<long>",
													"type": "string",
													"description": "(Required) id of the book to be searched"
												}
											]
										}
									},
									"response": [
										{
											"name": "Comments found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/books/:bookId/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"books",
														":bookId",
														"comments"
													],
													"variable": [
														{
															"key": "bookId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"id\": 75668580,\n  \"score\": -30211319,\n  \"commentary\": \"incididunt magna\",\n  \"userId\": 89972456,\n  \"bookId\": -34163185\n },\n {\n  \"id\": -90885505,\n  \"score\": 72468451,\n  \"commentary\": \"ullamco eu officia cupidatat reprehenderit\",\n  \"userId\": 30835504,\n  \"bookId\": 39394114\n }\n]"
										},
										{
											"name": "Book not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/books/:bookId/comments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"books",
														":bookId",
														"comments"
													],
													"variable": [
														{
															"key": "bookId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Get a reduced information (id, title) of all books",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/books",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"books"
									]
								}
							},
							"response": [
								{
									"name": "Books founds",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/books",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"books"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": -15827207,\n  \"title\": \"magna esse dolor ea ut\"\n },\n {\n  \"id\": -9869581,\n  \"title\": \"do nisi dolor aliqua\"\n }\n]"
								}
							]
						},
						{
							"name": "Creates a new book with all the needed ",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"author\": \"<string>\",\n    \"publishYear\": \"<integer>\",\n    \"publishingHouse\": \"<string>\",\n    \"summary\": \"<string>\",\n    \"title\": \"<string>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/books",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"books"
									]
								}
							},
							"response": [
								{
									"name": "Book created ok",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"author\": \"<string>\",\n    \"publishYear\": \"<integer>\",\n    \"publishingHouse\": \"<string>\",\n    \"summary\": \"<string>\",\n    \"title\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/books",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"books"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}